$date
	Sat Jun  8 07:58:02 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 ! \reg_arr[0] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 " \reg_arr[1] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 # \reg_arr[2] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 $ \reg_arr[3] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 % \reg_arr[4] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 & \reg_arr[5] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 ' \reg_arr[6] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 ( \reg_arr[7] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 ) \reg_arr[8] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 * \reg_arr[9] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 + \reg_arr[10] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 , \reg_arr[11] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 - \reg_arr[12] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 . \reg_arr[13] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 / \reg_arr[14] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 0 \reg_arr[15] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 1 \reg_arr[16] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 2 \reg_arr[17] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 3 \reg_arr[18] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 4 \reg_arr[19] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 5 \reg_arr[20] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 6 \reg_arr[21] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 7 \reg_arr[22] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 8 \reg_arr[23] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 9 \reg_arr[24] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 : \reg_arr[25] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 ; \reg_arr[26] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 < \reg_arr[27] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 = \reg_arr[28] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 > \reg_arr[29] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 ? \reg_arr[30] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$scope module u_riscv_top $end
$scope module u_riscv_cpu $end
$scope module u_riscv_datapath $end
$scope module u_riscv_regfile $end
$var reg 32 @ \reg_arr[31] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module riscv_top_tb $end
$var wire 16 A o_riscv_imem_pc [15:0] $end
$var wire 32 B o_riscv_imem_instr [31:0] $end
$var wire 1 C o_riscv_dmem_wr_en $end
$var wire 32 D o_riscv_dmem_wr_data [31:0] $end
$var wire 32 E o_riscv_dmem_rd_data [31:0] $end
$var wire 32 F o_riscv_dmem_addr [31:0] $end
$var reg 1 G i_clk $end
$var reg 1 H i_rstn $end
$var reg 128 I taskState [127:0] $end
$var reg 256 J vcd_file [255:0] $end
$var integer 32 K err [31:0] $end
$var integer 32 L i [31:0] $end
$scope module u_riscv_top $end
$var wire 1 G i_clk $end
$var wire 1 H i_rstn $end
$var wire 32 M o_riscv_dmem_rd_data [31:0] $end
$var wire 32 N o_riscv_dmem_wr_data [31:0] $end
$var wire 1 C o_riscv_dmem_wr_en $end
$var wire 32 O o_riscv_imem_instr [31:0] $end
$var wire 16 P o_riscv_imem_pc [15:0] $end
$var wire 16 Q w_riscv_imem_pc [15:0] $end
$var wire 32 R w_riscv_imem_instr [31:0] $end
$var wire 1 S w_riscv_dmem_wr_en $end
$var wire 32 T w_riscv_dmem_wr_data [31:0] $end
$var wire 32 U w_riscv_dmem_rd_data [31:0] $end
$var wire 32 V w_riscv_dmem_addr [31:0] $end
$var wire 16 W o_riscv_dmem_addr [15:0] $end
$scope module u_riscv_cpu $end
$var wire 1 G i_clk $end
$var wire 1 H i_rstn $end
$var wire 2 X w_cpu_src_result [1:0] $end
$var wire 1 Y w_cpu_src_pc $end
$var wire 3 Z w_cpu_src_imm [2:0] $end
$var wire 1 [ w_cpu_src_alu_b $end
$var wire 1 \ w_cpu_src_alu_a $end
$var wire 1 ] w_cpu_reg_wr $end
$var wire 1 ^ w_cpu_alu_zero $end
$var wire 4 _ w_cpu_alu_ctrl [3:0] $end
$var wire 16 ` o_cpu_imem_pc [15:0] $end
$var wire 1 S o_cpu_dmem_wr_en $end
$var wire 32 a o_cpu_dmem_wr_data [31:0] $end
$var wire 32 b o_cpu_dmem_addr [31:0] $end
$var wire 32 c i_cpu_imem_instr [31:0] $end
$var wire 32 d i_cpu_dmem_rd_data [31:0] $end
$scope module u_riscv_ctrl $end
$var wire 3 e i_ctrl_funct3 [2:0] $end
$var wire 1 f i_ctrl_funct7_5b $end
$var wire 7 g i_ctrl_opcode [6:0] $end
$var wire 1 Y o_ctrl_src_pc $end
$var wire 1 ^ i_ctrl_alu_zero $end
$var reg 128 h INSTR_OPCODE [127:0] $end
$var reg 4 i o_ctrl_alu_ctrl [3:0] $end
$var reg 1 S o_ctrl_mem_wr $end
$var reg 1 ] o_ctrl_reg_wr $end
$var reg 1 \ o_ctrl_src_alu_a $end
$var reg 1 [ o_ctrl_src_alu_b $end
$var reg 3 j o_ctrl_src_imm [2:0] $end
$var reg 2 k o_ctrl_src_result [1:0] $end
$var reg 3 l w_ctrl_alu_op [2:0] $end
$var reg 1 m w_ctrl_branch $end
$var reg 1 n w_ctrl_jump $end
$upscope $end
$scope module u_riscv_datapath $end
$var wire 1 G i_clk $end
$var wire 4 o i_dp_alu_ctrl [3:0] $end
$var wire 1 ] i_dp_reg_wr $end
$var wire 1 \ i_dp_src_alu_a $end
$var wire 1 [ i_dp_src_alu_b $end
$var wire 3 p i_dp_src_imm [2:0] $end
$var wire 1 Y i_dp_src_pc $end
$var wire 2 q i_dp_src_result [1:0] $end
$var wire 1 H i_rstn $end
$var wire 32 r o_dp_dmem_wr_data [31:0] $end
$var wire 32 s w_reg_wr_data [31:0] $end
$var wire 32 t w_reg_rd_data1 [31:0] $end
$var wire 32 u w_reg_rd_data0 [31:0] $end
$var wire 32 v w_imm_ext [31:0] $end
$var wire 32 w w_dp_pctarget [31:0] $end
$var wire 32 x w_dp_pcplus4 [31:0] $end
$var wire 32 y w_dp_pcnext [31:0] $end
$var wire 32 z w_alu_b [31:0] $end
$var wire 32 { w_alu_a [31:0] $end
$var wire 32 | o_dp_pc [31:0] $end
$var wire 1 ^ o_dp_alu_zero $end
$var wire 32 } o_dp_alu_result [31:0] $end
$var wire 32 ~ i_dp_instr [31:0] $end
$var wire 32 !" i_dp_dmem_rd_data [31:0] $end
$scope module u_riscv_alu $end
$var wire 32 "" i_alu_a [31:0] $end
$var wire 32 #" i_alu_b [31:0] $end
$var wire 4 $" i_alu_ctrl [3:0] $end
$var wire 1 ^ o_alu_zero $end
$var reg 128 %" ALU_OP [127:0] $end
$var reg 32 &" o_alu_result [31:0] $end
$upscope $end
$scope module u_riscv_dff $end
$var wire 1 G i_clk $end
$var wire 32 '" i_dff_d [31:0] $end
$var wire 1 H i_rstn $end
$var reg 32 (" o_dff_q [31:0] $end
$upscope $end
$scope module u_riscv_immext $end
$var wire 3 )" i_imm_src [2:0] $end
$var wire 32 *" i_imm_instr [31:0] $end
$var reg 32 +" o_imm_ext [31:0] $end
$upscope $end
$scope module u_riscv_regfile $end
$var wire 1 G i_clk $end
$var wire 5 ," i_reg_rd_addr0 [4:0] $end
$var wire 5 -" i_reg_rd_addr1 [4:0] $end
$var wire 5 ." i_reg_wr_addr [4:0] $end
$var wire 32 /" i_reg_wr_data [31:0] $end
$var wire 1 ] i_reg_wr_en $end
$var wire 1 H i_rstn $end
$var wire 32 0" o_reg_rd_data0 [31:0] $end
$var wire 32 1" o_reg_rd_data1 [31:0] $end
$var integer 32 2" i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_riscv_dmem $end
$var wire 1 G i_clk $end
$var wire 16 3" i_mem_addr [15:0] $end
$var wire 32 4" i_mem_data [31:0] $end
$var wire 1 S i_mem_wr_en $end
$var wire 32 5" o_mem_data [31:0] $end
$upscope $end
$scope module u_riscv_imem $end
$var wire 1 G i_clk $end
$var wire 16 6" i_mem_addr [15:0] $end
$var wire 32 7" i_mem_data [31:0] $end
$var wire 1 8" i_mem_wr_en $end
$var wire 32 9" o_mem_data [31:0] $end
$upscope $end
$upscope $end
$scope task init $end
$upscope $end
$scope task resetNCycle $end
$var reg 10 :" i [9:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100 :"
b10100000000000100010011 9"
08"
b0 7"
b0 6"
bx 5"
b0 4"
b101 3"
b11111 2"
b0 1"
b0 0"
b101 /"
b10 ."
b101 -"
b0 ,"
b101 +"
b10100000000000100010011 *"
b1 )"
b0 ("
b100 '"
b101 &"
b1000001010001000100010000001001 %"
b0 $"
b101 #"
b0 ""
bx !"
b10100000000000100010011 ~
b101 }
b0 |
b0 {
b101 z
b100 y
b100 x
b101 w
b101 v
b0 u
b0 t
b101 s
b0 r
b0 q
b1 p
b0 o
0n
0m
b11 l
b0 k
b1 j
b0 i
b10011110101000001011111010010010100110101001101 h
b10011 g
0f
b0 e
bx d
b10100000000000100010011 c
b101 b
b0 a
b0 `
b0 _
0^
1]
0\
1[
b1 Z
0Y
b0 X
b101 W
b101 V
bx U
b0 T
0S
b10100000000000100010011 R
b0 Q
b0 P
b10100000000000100010011 O
b0 N
bx M
b100000 L
b0 K
b101110001011110111011001100011011001000010111101110010011010010111001101100011011101100101111101110100011011110111000000101110011101100110001101100100 J
b101001001100101011100110110010101110100 I
0H
0G
b101 F
bx E
b0 D
0C
b10100000000000100010011 B
b0 A
bx @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#5000
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
b11111 2"
1G
#10000
0G
#15000
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
b11111 2"
1G
#20000
0G
#25000
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
b11111 2"
1G
#30000
0G
#35000
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
b11111 2"
1G
#40000
0G
b0 L
1H
#45000
b1100 s
b1100 /"
b1100 3"
b1100 F
b1100 W
b1100 V
b1100 b
b1100 }
b1100 &"
b1100 z
b1100 #"
b11 ."
b1100 -"
b1100 v
b1100 +"
b110000000000000110010011 B
b110000000000000110010011 O
b110000000000000110010011 R
b110000000000000110010011 c
b110000000000000110010011 ~
b110000000000000110010011 *"
b110000000000000110010011 9"
b1 6"
b1000 y
b1000 '"
b100 A
b100 P
b100 Q
b100 `
b10000 w
b1000 x
b100 |
b100 ("
b101 #
1G
#50000
0G
b1 L
#55000
b11 s
b11 /"
b11 3"
b11 F
b11 W
b11 V
b11 b
b11 }
b11 &"
b1100 {
b1100 ""
b11111111111111111111111111110111 z
b11111111111111111111111111110111 #"
b111 ."
b10111 -"
b1100 u
b1100 0"
b11 ,"
1f
b11111111111111111111111111110111 v
b11111111111111111111111111110111 +"
b11111111011100011000001110010011 B
b11111111011100011000001110010011 O
b11111111011100011000001110010011 R
b11111111011100011000001110010011 c
b11111111011100011000001110010011 ~
b11111111011100011000001110010011 *"
b11111111011100011000001110010011 9"
b10 6"
b1100 y
b1100 '"
b1000 A
b1000 P
b1000 Q
b1000 `
b1100 $
b11111111111111111111111111111111 w
b1100 x
b1000 |
b1000 ("
1G
#60000
0G
b10 L
#65000
b111 s
b111 /"
b111 3"
b111 F
b111 W
b111 V
b111 b
b111 }
b111 &"
b10011110101001000001001 %"
b11 {
b11 ""
b110 _
b110 i
b110 o
b110 $"
0[
b0 Z
b0 j
b0 p
b0 )"
b10 l
b10011110101000000100000001000000010000000100000 h
b101 z
b101 #"
b100 ."
b101 D
b101 N
b101 T
b101 a
b101 r
b101 4"
b101 t
b101 1"
b10 -"
b11 u
b11 0"
b111 ,"
0f
b110 e
b110011 g
bx v
bx +"
b1000111110001000110011 B
b1000111110001000110011 O
b1000111110001000110011 R
b1000111110001000110011 c
b1000111110001000110011 ~
b1000111110001000110011 *"
b1000111110001000110011 9"
b11 6"
b10000 y
b10000 '"
b1100 A
b1100 P
b1100 Q
b1100 `
bx w
b10000 x
b1100 |
b1100 ("
b11 (
1G
#70000
0G
b11 L
#75000
b100 s
b100 /"
b100 3"
b100 F
b100 W
b1000001010011100100010000001001 %"
b100 V
b100 b
b100 }
b100 &"
b111 z
b111 #"
b1100 {
b1100 ""
b111 _
b111 i
b111 o
b111 $"
b101 ."
b111 D
b111 N
b111 T
b111 a
b111 r
b111 4"
b111 t
b111 1"
b100 -"
b1100 u
b1100 0"
b11 ,"
b111 e
b10000011111001010110011 B
b10000011111001010110011 O
b10000011111001010110011 R
b10000011111001010110011 c
b10000011111001010110011 ~
b10000011111001010110011 *"
b10000011111001010110011 9"
b100 6"
b10100 y
b10100 '"
b10000 A
b10000 P
b10000 Q
b10000 `
b111 %
b10100 x
b10000 |
b10000 ("
1G
#80000
0G
b100 L
#85000
b1011 s
b1011 /"
b1011 3"
b1011 F
b1011 W
b1000001010001000100010000001001 %"
b1011 V
b1011 b
b1011 }
b1011 &"
b100 {
b100 ""
b0 _
b0 i
b0 o
b0 $"
b100 u
b100 0"
b101 ,"
b0 e
b10000101000001010110011 B
b10000101000001010110011 O
b10000101000001010110011 R
b10000101000001010110011 c
b10000101000001010110011 ~
b10000101000001010110011 *"
b10000101000001010110011 9"
b101 6"
b11000 y
b11000 '"
b10100 A
b10100 P
b10100 Q
b10100 `
b11000 x
b10100 |
b10100 ("
b100 &
1G
#90000
0G
b101 L
#95000
b1010011010101010100001000001001 %"
b1000 _
b1000 i
b1000 o
b1000 $"
b1001000 w
b110000 v
b110000 +"
b11 z
b11 #"
b10000100101001001000001010011100100001101001000 h
b1 l
b11 Z
b11 j
b11 p
b11 )"
b11 X
b11 k
b11 q
0]
1m
b11100 s
b11100 /"
b1000 3"
b1000 F
b1000 W
b10000 ."
b11 D
b11 N
b11 T
b11 a
b11 r
b11 4"
b11 t
b11 1"
b111 -"
b1100011 g
b1000 V
b1000 b
b1000 }
b1000 &"
b10011100101000100001100011 B
b10011100101000100001100011 O
b10011100101000100001100011 R
b10011100101000100001100011 c
b10011100101000100001100011 ~
b10011100101000100001100011 *"
b10011100101000100001100011 9"
b110 6"
b1011 {
b1011 ""
b11100 y
b11100 '"
b11000 A
b11000 P
b11000 Q
b11000 `
b1011 &
b1011 u
b1011 0"
b11100 x
b11000 |
b11000 ("
1G
#100000
0G
b110 L
#105000
1^
b0 3"
b0 F
b0 W
b1010011010011000101010000001001 %"
b0 V
b0 b
b0 }
b0 &"
b111 z
b111 #"
b1100 {
b1100 ""
b10 _
b10 i
b10 o
b10 $"
0m
1]
b0 X
b0 k
b0 q
b0 Z
b0 j
b0 p
b0 )"
b10 l
b10011110101000000100000001000000010000000100000 h
b100 ."
b111 D
b111 N
b111 T
b111 a
b111 r
b111 4"
b111 t
b111 1"
b100 -"
b1100 u
b1100 0"
b11 ,"
b10 e
b110011 g
bx v
bx +"
b0 s
b0 /"
b10000011010001000110011 B
b10000011010001000110011 O
b10000011010001000110011 R
b10000011010001000110011 c
b10000011010001000110011 ~
b10000011010001000110011 *"
b10000011010001000110011 9"
b111 6"
b100000 y
b100000 '"
b11100 A
b11100 P
b11100 Q
b11100 `
bx w
b100000 x
b11100 |
b11100 ("
b0 1
1G
#110000
0G
b111 L
#115000
1Y
b1010011010101010100001000001001 %"
b101000 w
b1000 v
b1000 +"
b100100 s
b100100 /"
b0 {
b0 ""
b1000 _
b1000 i
b1000 o
b1000 $"
b10000100101001001000001010011100100001101001000 h
b1 l
b11 Z
b11 j
b11 p
b11 )"
b11 X
b11 k
b11 q
0]
1m
b1000 ."
b0 -"
b0 u
b0 0"
b100 ,"
b0 e
b1100011 g
b100000010001100011 B
b100000010001100011 O
b100000010001100011 R
b100000010001100011 c
b100000010001100011 ~
b100000010001100011 *"
b100000010001100011 9"
b1000 6"
b0 z
b0 #"
b101000 y
b101000 '"
b100000 A
b100000 P
b100000 Q
b100000 `
b0 %
b0 D
b0 N
b0 T
b0 a
b0 r
b0 4"
b0 t
b0 1"
b100100 x
b100000 |
b100000 ("
1G
#120000
0G
b1000 L
#125000
0^
b1 3"
b1 F
b1 W
0Y
b1010011010011000101010000001001 %"
b1 V
b1 b
b1 }
b1 &"
b101 z
b101 #"
b11 {
b11 ""
b10 _
b10 i
b10 o
b10 $"
0m
1]
b0 X
b0 k
b0 q
b0 Z
b0 j
b0 p
b0 )"
b10 l
b10011110101000000100000001000000010000000100000 h
b100 ."
b101 D
b101 N
b101 T
b101 a
b101 r
b101 4"
b101 t
b101 1"
b10 -"
b11 u
b11 0"
b111 ,"
b10 e
b110011 g
bx v
bx +"
b1 s
b1 /"
b1000111010001000110011 B
b1000111010001000110011 O
b1000111010001000110011 R
b1000111010001000110011 c
b1000111010001000110011 ~
b1000111010001000110011 *"
b1000111010001000110011 9"
b1010 6"
b101100 y
b101100 '"
b101000 A
b101000 P
b101000 Q
b101000 `
bx w
b101100 x
b101000 |
b101000 ("
b0 )
1G
#130000
0G
b1001 L
#135000
b1100 s
b1100 /"
b1100 3"
b1100 F
b1100 W
b1000001010001000100010000001001 %"
b1100 V
b1100 b
b1100 }
b1100 &"
b1011 z
b1011 #"
b1 {
b1 ""
b0 _
b0 i
b0 o
b0 $"
b111 ."
b1011 D
b1011 N
b1011 T
b1011 a
b1011 r
b1011 4"
b1011 t
b1011 1"
b101 -"
b1 u
b1 0"
b100 ,"
b0 e
b10100100000001110110011 B
b10100100000001110110011 O
b10100100000001110110011 R
b10100100000001110110011 c
b10100100000001110110011 ~
b10100100000001110110011 *"
b10100100000001110110011 9"
b1011 6"
b110000 y
b110000 '"
b101100 A
b101100 P
b101100 Q
b101100 `
b1 %
b110000 x
b101100 |
b101100 ("
1G
#140000
0G
b1010 L
#145000
b111 s
b111 /"
b111 3"
b111 F
b111 W
b1010011010101010100001000001001 %"
b111 V
b111 b
b111 }
b111 &"
b101 z
b101 #"
b1100 {
b1100 ""
b1000 _
b1000 i
b1000 o
b1000 $"
b101 D
b101 N
b101 T
b101 a
b101 r
b101 4"
b101 t
b101 1"
b10 -"
b1100 u
b1100 0"
b111 ,"
1f
b1000000001000111000001110110011 B
b1000000001000111000001110110011 O
b1000000001000111000001110110011 R
b1000000001000111000001110110011 c
b1000000001000111000001110110011 ~
b1000000001000111000001110110011 *"
b1000000001000111000001110110011 9"
b1100 6"
b110100 y
b110100 '"
b110000 A
b110000 P
b110000 Q
b110000 `
b110100 x
b110000 |
b110000 ("
b1100 (
1G
#150000
0G
b1011 L
#155000
0^
b1000001010001000100010000001001 %"
b10001000 w
b1010100 v
b1010100 +"
b1010100 z
b1010100 #"
b0 _
b0 i
b0 o
b0 $"
b10100110101010001001111010100100100010100100000 h
b0 l
b10 Z
b10 j
b10 p
b10 )"
b11 X
b11 k
b11 q
1[
1C
1S
0]
b111000 s
b111000 /"
b1100000 3"
b1100000 F
b1100000 W
b10100 ."
b111 D
b111 N
b111 T
b111 a
b111 r
b111 4"
b111 t
b111 1"
b111 -"
b11 ,"
0f
b10 e
b100011 g
b1100000 V
b1100000 b
b1100000 }
b1100000 &"
b100011100011010101000100011 B
b100011100011010101000100011 O
b100011100011010101000100011 R
b100011100011010101000100011 c
b100011100011010101000100011 ~
b100011100011010101000100011 *"
b100011100011010101000100011 9"
b1101 6"
b1100 {
b1100 ""
b111000 y
b111000 '"
b110100 A
b110100 P
b110100 Q
b110100 `
b111 (
b1100 u
b1100 0"
b111000 x
b110100 |
b110100 ("
1G
#160000
0G
b1100 L
#165000
b1100000 3"
b1100000 F
b1100000 W
b111 E
b111 M
b111 U
b111 d
b111 !"
b111 5"
b1100000 V
b1100000 b
b1100000 }
b1100000 &"
b0 {
b0 ""
1]
0C
0S
b1 X
b1 k
b1 q
b1 Z
b1 j
b1 p
b1 )"
b10011000100111101000001010001000010000000100000 h
b1100000 z
b1100000 #"
b10 ."
b0 D
b0 N
b0 T
b0 a
b0 r
b0 4"
b0 t
b0 1"
b0 -"
b0 u
b0 0"
b0 ,"
b11 g
b1100000 v
b1100000 +"
b111 s
b111 /"
b110000000000010000100000011 B
b110000000000010000100000011 O
b110000000000010000100000011 R
b110000000000010000100000011 c
b110000000000010000100000011 ~
b110000000000010000100000011 *"
b110000000000010000100000011 9"
b1110 6"
b111100 y
b111100 '"
b111000 A
b111000 P
b111000 Q
b111000 `
b10011000 w
b111100 x
b111000 |
b111000 ("
b0 5
1G
#170000
0G
b1101 L
#175000
bx E
bx M
bx U
bx d
bx !"
bx 5"
b10010 3"
b10010 F
b10010 W
b10010 s
b10010 /"
b10010 V
b10010 b
b10010 }
b10010 &"
b111 {
b111 ""
b10011110101000000100000001000000010000000100000 h
b10 l
b0 Z
b0 j
b0 p
b0 )"
b0 X
b0 k
b0 q
0[
b1011 z
b1011 #"
b1001 ."
b1011 D
b1011 N
b1011 T
b1011 a
b1011 r
b1011 4"
b1011 t
b1011 1"
b101 -"
b111 u
b111 0"
b10 ,"
b0 e
b110011 g
bx v
bx +"
b10100010000010010110011 B
b10100010000010010110011 O
b10100010000010010110011 R
b10100010000010010110011 c
b10100010000010010110011 ~
b10100010000010010110011 *"
b10100010000010010110011 9"
b1111 6"
b1000000 y
b1000000 '"
b111100 A
b111100 P
b111100 Q
b111100 `
b111 #
bx w
b1000000 x
b111100 |
b111100 ("
1G
#180000
0G
b1110 L
#185000
1Y
b1000100 s
b1000100 /"
b1001000 w
b1000 v
b1000 +"
b1111 _
b1111 i
b1111 o
b1111 $"
b0 z
b0 #"
b0 {
b0 ""
1n
b10 X
b10 k
b10 q
b101 Z
b101 j
b101 p
b101 )"
b100 l
b10010100100000101001100001000000010000000100000 h
b11 ."
b0 D
b0 N
b0 T
b0 a
b0 r
b0 4"
b0 t
b0 1"
b1000 -"
b0 u
b0 0"
b0 ,"
b1101111 g
b100000000000000111101111 B
b100000000000000111101111 O
b100000000000000111101111 R
b100000000000000111101111 c
b100000000000000111101111 ~
b100000000000000111101111 *"
b100000000000000111101111 9"
b10000 6"
b1001000 y
b1001000 '"
b1000000 A
b1000000 P
b1000000 Q
b1000000 `
b1000100 x
b1000000 |
b1000000 ("
b10010 *
1G
#190000
0G
b1111 L
#195000
b11001 3"
b11001 F
b11001 W
b11001 V
b11001 b
b11001 }
b11001 &"
b0 _
b0 i
b0 o
b0 $"
0Y
b10010 z
b10010 #"
b111 {
b111 ""
b10011110101000000100000001000000010000000100000 h
b10 l
b0 Z
b0 j
b0 p
b0 )"
b0 X
b0 k
b0 q
0n
b10 ."
b10010 D
b10010 N
b10010 T
b10010 a
b10010 r
b10010 4"
b10010 t
b10010 1"
b1001 -"
b111 u
b111 0"
b10 ,"
b110011 g
bx v
bx +"
b11001 s
b11001 /"
b100100010000000100110011 B
b100100010000000100110011 O
b100100010000000100110011 R
b100100010000000100110011 c
b100100010000000100110011 ~
b100100010000000100110011 *"
b100100010000000100110011 9"
b10010 6"
b1001100 y
b1001100 '"
b1001000 A
b1001000 P
b1001000 Q
b1001000 `
b1000100 $
bx w
b1001100 x
b1001000 |
b1001000 ("
1G
#200000
0G
b10000 L
#205000
0^
b1101100 w
b100000 v
b100000 +"
b100000 z
b100000 #"
0]
1C
1S
1[
b11 X
b11 k
b11 q
b10 Z
b10 j
b10 p
b10 )"
b0 l
b10100110101010001001111010100100100010100100000 h
b0 ."
b11001 D
b11001 N
b11001 T
b11001 a
b11001 r
b11001 4"
b11001 t
b11001 1"
b10 -"
b11 ,"
b10 e
b100011 g
b1010000 s
b1010000 /"
b1100100 3"
b1100100 F
b1100100 W
b10001000011010000000100011 B
b10001000011010000000100011 O
b10001000011010000000100011 R
b10001000011010000000100011 c
b10001000011010000000100011 ~
b10001000011010000000100011 *"
b10001000011010000000100011 9"
b10011 6"
b1100100 V
b1100100 b
b1100100 }
b1100100 &"
b1010000 y
b1010000 '"
b1001100 A
b1001100 P
b1001100 Q
b1001100 `
b1000100 {
b1000100 ""
b1010000 x
b1001100 |
b1001100 ("
b11001 #
b1000100 u
b1000100 0"
1G
#210000
0G
b10001 L
#215000
1Y
1^
b0 3"
b0 F
b0 W
b1010011010101010100001000001001 %"
bx E
bx M
bx U
bx d
bx !"
bx 5"
b0 V
b0 b
b0 }
b0 &"
b11001 {
b11001 ""
b1000 _
b1000 i
b1000 o
b1000 $"
b10000100101001001000001010011100100001101001000 h
b1 l
b11 Z
b11 j
b11 p
b11 )"
0[
0C
0S
1m
b11001 z
b11001 #"
b11001 u
b11001 0"
b10 ,"
b0 e
b1100011 g
b0 v
b0 +"
b1010100 s
b1010100 /"
b1000010000000001100011 B
b1000010000000001100011 O
b1000010000000001100011 R
b1000010000000001100011 c
b1000010000000001100011 ~
b1000010000000001100011 *"
b1000010000000001100011 9"
b10100 6"
b1010000 y
b1010000 '"
b1010000 A
b1010000 P
b1010000 Q
b1010000 `
b0 !
b1010000 w
b1010100 x
b1010000 |
b1010000 ("
1G
#220000
0G
b10010 L
#225000
b0 !
1G
#230000
0G
b10011 L
#235000
b0 !
1G
#240000
0G
b10100 L
#245000
b0 !
1G
#250000
0G
b10101 L
#255000
b0 !
1G
#260000
0G
b10110 L
#265000
b0 !
1G
#270000
0G
b10111 L
#275000
b0 !
1G
#280000
0G
b11000 L
#285000
b0 !
1G
#290000
0G
b11001 L
#295000
b0 !
1G
#300000
0G
b11010 L
#305000
b0 !
1G
#310000
0G
b11011 L
#315000
b0 !
1G
#320000
0G
b11100 L
#325000
b0 !
1G
#330000
0G
b11101 L
#335000
b0 !
1G
#340000
0G
b11110 L
#345000
b0 !
1G
#350000
0G
b11111 L
#355000
b0 !
1G
#360000
0G
b100000 L
#365000
b0 !
1G
#370000
0G
b100001 L
#375000
b0 !
1G
#380000
0G
b100010 L
#385000
b0 !
1G
#390000
0G
b100011 L
#395000
b0 !
1G
#400000
0G
b100100 L
#405000
b0 !
1G
#410000
0G
b100101 L
#415000
b0 !
1G
#420000
0G
b100110 L
#425000
b0 !
1G
#430000
0G
b100111 L
#435000
b0 !
1G
#440000
0G
b101000 L
#445000
b0 !
1G
#450000
0G
b101001 L
#455000
b0 !
1G
#460000
0G
b101010 L
#465000
b0 !
1G
#470000
0G
b101011 L
#475000
b0 !
1G
#480000
0G
b101100 L
#485000
b0 !
1G
#490000
0G
b101101 L
#495000
b0 !
1G
#500000
0G
b101110 L
#505000
b0 !
1G
#510000
0G
b101111 L
#515000
b0 !
1G
#520000
0G
b110000 L
#525000
b0 !
1G
#530000
0G
b110001 L
#535000
b0 !
1G
#540000
0G
b110010 L
#545000
b0 !
1G
#550000
0G
