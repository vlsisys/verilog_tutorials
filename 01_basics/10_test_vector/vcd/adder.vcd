$date
	Fri Jun 21 16:12:20 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module adder_tb $end
$var wire 4 ! o_s [3:0] $end
$var wire 1 " o_c $end
$var reg 4 # i_a [3:0] $end
$var reg 4 $ i_b [3:0] $end
$var reg 1 % i_c $end
$var reg 128 & taskState [127:0] $end
$var reg 256 ' vcd_file [255:0] $end
$var integer 32 ( err [31:0] $end
$var integer 32 ) i [31:0] $end
$scope module u_adder $end
$var wire 4 * i_a [3:0] $end
$var wire 4 + i_b [3:0] $end
$var wire 1 % i_c $end
$var wire 4 , o_s [3:0] $end
$var wire 1 " o_c $end
$upscope $end
$scope task init $end
$upscope $end
$scope task vecInsert $end
$var reg 4 - i [3:0] $end
$upscope $end
$scope task vecVerify $end
$var reg 4 . i [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 .
b0 -
b100 ,
b1100 +
b1000 *
b0 )
b0 (
b1011100010111101110110011000110110010000101111011000010110010001100100011001010111001000101110011101100110001101100100 '
b1010110010001010100001101011011001000000011000001011101 &
0%
b1100 $
b1000 #
1"
b100 !
$end
#10000
0"
b1001 !
b1001 ,
b1 .
1%
b11 $
b11 +
b101 #
b101 *
b1010110010001010100001101011011001000000011000101011101 &
b1 -
b1 )
#20000
1"
b100 !
b100 ,
b10 .
b1010 $
b1010 +
b1001 #
b1001 *
b1010110010001010100001101011011001000000011001001011101 &
b10 -
b10 )
#30000
0"
b1010 !
b1010 ,
b11 .
b10 $
b10 +
b111 #
b111 *
b1010110010001010100001101011011001000000011001101011101 &
b11 -
b11 )
#40000
b1100 !
b1100 ,
b100 .
0%
b11 $
b11 +
b1001 #
b1001 *
b1010110010001010100001101011011001000000011010001011101 &
b100 -
b100 )
#50000
1"
b0 !
b0 ,
b101 .
b1010 $
b1010 +
b110 #
b110 *
b1010110010001010100001101011011001000000011010101011101 &
b101 -
b101 )
#60000
b111 !
b111 ,
b110 .
1%
b1000 $
b1000 +
b1110 #
b1110 *
b1010110010001010100001101011011001000000011011001011101 &
b110 -
b110 )
#70000
b1110 !
b1110 ,
0"
b111 .
0%
b1110 $
b1110 +
b0 #
b0 *
b1010110010001010100001101011011001000000011011101011101 &
b111 -
b111 )
#80000
b1 !
b1 ,
1"
b1000 .
1%
b1010 $
b1010 +
b110 #
b110 *
b1010110010001010100001101011011001000000011100001011101 &
b1000 -
b1000 )
#90000
0"
b1111 !
b1111 ,
b1001 .
0%
b111 $
b111 +
b1000 #
b1000 *
b1010110010001010100001101011011001000000011100101011101 &
b1001 -
b1001 )
#100000
b1010 )
#110000
